user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

# 四层负载均衡，为Master apiserver和Ingress-Nginx组件提供负载均衡
stream {
    log_format main '$remote_addr $upstream_addr - [$time_local] $status $upstream_bytes_sent';
    access_log /var/log/nginx/k8s-access.log main;

    # k8s-apiserver负载均衡
    upstream k8s-apiserver {
        server k8s-master1:6443;  # 动态生成Master节点
        server k8s-master2:6443;  # 动态生成Master节点
        server k8s-master3:6443;  # 动态生成Master节点
    }

    # ingress-nginx负载均衡
    upstream ingress-nginx-http {
        server 192.168.235.214:80;  # 动态生成Ingress-Nginx节点
        server 192.168.235.215:80;  # 动态生成Ingress-Nginx节点
        server 192.168.235.216:80;  # 动态生成Ingress-Nginx节点
    }


    # ingress-nginx负载均衡
    upstream ingress-nginx-https {
        server 192.168.235.214:443;  # 动态生成Ingress-Nginx节点
        server 192.168.235.215:443;  # 动态生成Ingress-Nginx节点
        server 192.168.235.216:443;  # 动态生成Ingress-Nginx节点
    }

    # Master apiserver负载均衡
    server {
        listen 16443;  # 避免与6443冲突
        proxy_pass k8s-apiserver;
    }

    # Ingress-Nginx HTTP负载均衡
    server {
        listen 80;  # 监听80端口用于HTTP
        proxy_pass ingress-nginx-http;
    }

    # Ingress-Nginx HTTPS负载均衡
    server {
        listen 443;  # 监听443端口用于HTTPS
        proxy_protocol on;
        proxy_pass ingress-nginx-https;
    }
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 8000 default_server;
        server_name _;
        location / { }
    }
}
